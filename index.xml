<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>YY小站</title><link>https://yanyong.cc/</link><description>Recent content on YY小站</description><generator>Hugo</generator><language>en</language><copyright>yanyong.cc</copyright><lastBuildDate>Thu, 03 Apr 2025 10:09:00 +0800</lastBuildDate><atom:link href="https://yanyong.cc/index.xml" rel="self" type="application/rss+xml"/><item><title>关于</title><link>https://yanyong.cc/about/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://yanyong.cc/about/</guid><description>关于我 喜欢和机器说话，偶尔也和人类交流。 喜欢造轮子，因为别人的轮子是别人的。 关于本站 Namesilo（域名价格较低，免费隐私保护，支持支付宝</description></item><item><title>搜索</title><link>https://yanyong.cc/search/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://yanyong.cc/search/</guid><description>This file exists solely to respond to /search URL with the related search layout template. No content shown here is rendered, all content is based in the template layouts/page/search.html Setting a very low sitemap priority will tell search engines this is not important content. This implementation uses Fusejs, jquery and mark.js https://gohugo.io/tools/search/#github-gist-for-fusejs-integration</description></item><item><title>nginx配置示例</title><link>https://yanyong.cc/post/nginx-config-example/</link><pubDate>Thu, 03 Apr 2025 10:09:00 +0800</pubDate><guid>https://yanyong.cc/post/nginx-config-example/</guid><description>nginx.conf 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69</description></item><item><title>不解释系列v2ray、xray、trojan、trojan-go、IKEv2合集</title><link>https://yanyong.cc/post/noexplain-v2ray-xray-trojan-ikev2/</link><pubDate>Wed, 02 Apr 2025 10:09:00 +0800</pubDate><guid>https://yanyong.cc/post/noexplain-v2ray-xray-trojan-ikev2/</guid><description>Proxy to bypass G.F.W 前言 包含nginx 4层代理实现443端口共用 ssl证书 参考 https://yanyong.cc/post/certbot-cloudflare-letsencrypt/ 安装nginx 1 sudo apt -y install nginx libnginx-mod-stream v2ray config.json 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20</description></item><item><title>certbot + cloudflare自动续签let's encrypt泛域名证书</title><link>https://yanyong.cc/post/certbot-cloudflare-letsencrypt/</link><pubDate>Tue, 01 Apr 2025 15:24:00 +0800</pubDate><guid>https://yanyong.cc/post/certbot-cloudflare-letsencrypt/</guid><description>服务器环境 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 $ cat /etc/os-release PRETTY_NAME=&amp;#34;Debian GNU/Linux 12 (bookworm)&amp;#34; NAME=&amp;#34;Debian GNU/Linux&amp;#34; VERSION_ID=&amp;#34;12&amp;#34; VERSION=&amp;#34;12 (bookworm)&amp;#34; VERSION_CODENAME=bookworm ID=debian HOME_URL=&amp;#34;https://www.debian.org/&amp;#34; SUPPORT_URL=&amp;#34;https://www.debian.org/support&amp;#34; BUG_REPORT_URL=&amp;#34;https://bugs.debian.org/&amp;#34; $ uname -a Linux ushost 6.1.0-31-amd64 #1 SMP PREEMPT_DYNAMIC Debian 6.1.128-1 (2025-02-07) x86_64 GNU/Linux $ certbot --version certbot 2.1.0 获取证书 token已脱敏 1</description></item><item><title>wps(js宏)和python处理excel表格案例</title><link>https://yanyong.cc/post/js-python-excel/</link><pubDate>Thu, 20 Feb 2025 15:15:15 +0800</pubDate><guid>https://yanyong.cc/post/js-python-excel/</guid><description>需求 价格表.xlsx 统计每个行业价格排名前5的数据，包括代码和价格 方法一：WPS(js宏) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25</description></item><item><title>ubuntu初始化脚本</title><link>https://yanyong.cc/post/init-script-ubuntu/</link><pubDate>Wed, 10 Jan 2024 17:14:23 +0800</pubDate><guid>https://yanyong.cc/post/init-script-ubuntu/</guid><description>ubuntu初始化脚本 已在20.04和22.04验证通过，脚本已脱敏 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36</description></item><item><title>Fuck lvm</title><link>https://yanyong.cc/post/fuck-lvm/</link><pubDate>Mon, 25 Dec 2023 13:30:22 +0800</pubDate><guid>https://yanyong.cc/post/fuck-lvm/</guid><description>lvm扩容根目录/ 1 2 3 4 5 6 7 sudo pvcreate /dev/vdb sudo vgextend ubuntu-vg /dev/vdb sudo lvextend -l +100%FREE /dev/mapper/ubuntu--vg-ubuntu--lv #ext4用： sudo resize2fs /dev/mapper/ubuntu--vg-ubuntu--lv #xfs用： sudo xfs_growfs /dev/mapper/ubuntu--vg-ubuntu--lv lvm增加硬盘，挂载到/data 1 2 3 4 5 6 7</description></item><item><title>kubeflow安装教程</title><link>https://yanyong.cc/post/kubeflow-install/</link><pubDate>Mon, 24 Jul 2023 09:45:37 +0800</pubDate><guid>https://yanyong.cc/post/kubeflow-install/</guid><description>服务器和软件版本规划 7台服务器和1个虚拟IP： 172.27.244.151-153(3台master,4C/8G/500GB) 172.27.</description></item><item><title>vcpkg静态链接libcurl</title><link>https://yanyong.cc/post/vcpkgstaticlink/</link><pubDate>Mon, 14 Nov 2022 11:12:48 +0800</pubDate><guid>https://yanyong.cc/post/vcpkgstaticlink/</guid><description>背景 C++写的小工具(源代码)用了libcurl库，开发时用vcpkg管理的第三方库，默认是动态链接库，发布给他人使用时还得把libcurl</description></item><item><title>我的C++代码风格</title><link>https://yanyong.cc/post/cppstyle/</link><pubDate>Wed, 19 Oct 2022 15:17:32 +0800</pubDate><guid>https://yanyong.cc/post/cppstyle/</guid><description>背景 最近用C++写一个小工具，顺便总结了一个c++代码风格。不拒绝匈牙利命名，但不制造匈牙利命名！^_^ 代码风格 具体来说，只是列出了命名的约</description></item><item><title>Javascript是最好的语言，[狗头保命]</title><link>https://yanyong.cc/post/ym-163-com-javascript/</link><pubDate>Sat, 25 Jun 2022 15:28:22 +0800</pubDate><guid>https://yanyong.cc/post/ym-163-com-javascript/</guid><description>需求 网易的免费邮箱：https://ym.163.com，迁移邮箱。如果是迁移到企业邮箱的话，企业邮箱一般会有提供导入之类的功能，如果是迁移</description></item><item><title>iRedMail批量创建邮箱</title><link>https://yanyong.cc/post/iredmail-create-mail-user/</link><pubDate>Wed, 15 Jun 2022 14:37:12 +0800</pubDate><guid>https://yanyong.cc/post/iredmail-create-mail-user/</guid><description>需求 来活儿了！开通500个邮箱！约摸2年前自建的iRedMail邮箱服务器闪亮登场！ 这要是从后台届面手动注册，没个一天估计点不完，需求方没有</description></item><item><title>IKEv2不解释</title><link>https://yanyong.cc/post/strongswan/</link><pubDate>Tue, 26 Apr 2022 10:35:20 +0800</pubDate><guid>https://yanyong.cc/post/strongswan/</guid><description>最新内容 https://yanyong.cc/post/noexplain-v2ray-xray-trojan-ikev2/ 2025.4.2 1 2 3 sudo apt-get -y install charon-systemd libstrongswan-extra-plugins libcharon-extra-plugins #sudo systemctl status strongswan 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50</description></item><item><title>懂的都懂不解释</title><link>https://yanyong.cc/post/fuckgfw/</link><pubDate>Mon, 25 Apr 2022 15:55:23 +0800</pubDate><guid>https://yanyong.cc/post/fuckgfw/</guid><description>最新内容 https://yanyong.cc/post/noexplain-v2ray-xray-trojan-ikev2/ 2025.4.2 基础配置 安装docker和nginx 略&amp;hellip; ssl泛域名证书和cloudflare 略&amp;hellip; BBR and TFO https://wiki.crowncloud.net/?How_to_enable_BBR_on_Debian_11 https://www.geeksforgeeks.org/what-is-tcp-fast-open/ 1 2 3 4</description></item><item><title>k8s部署rabbitmq</title><link>https://yanyong.cc/post/rabbitmq-k8s/</link><pubDate>Sun, 24 Apr 2022 11:39:50 +0800</pubDate><guid>https://yanyong.cc/post/rabbitmq-k8s/</guid><description>部署RabbitMQ Cluster Operator 1 kubectl apply -f https://github.com/rabbitmq/cluster-operator/releases/latest/download/cluster-operator.yml 部署RabbitMQ cluster 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 tee rabbitmq.yaml &amp;lt;&amp;lt; EOF apiVersion: rabbitmq.com/v1beta1 kind: RabbitmqCluster metadata: name: rabbitmq spec: rabbitmq: additionalConfig: | default_user=guest default_pass=guest replicas:</description></item><item><title>jenkins自动发布之java项目</title><link>https://yanyong.cc/post/jenkins03/</link><pubDate>Fri, 22 Apr 2022 17:42:53 +0800</pubDate><guid>https://yanyong.cc/post/jenkins03/</guid><description>java项目 微服务 安装插件 Maven Integration Dockerfile FROM openjdk:8-jre-slim MAINTAINER yanyong ARG ACTIVE ENV JAVA_OPT=&amp;quot;-Xms1g -Xmx1g&amp;quot; ENV JAVA_ARG=&amp;quot;--spring.profiles.active=$ACTIVE&amp;quot; RUN ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime \ &amp;amp;&amp;amp; echo 'Asia/Shanghai' &amp;gt; /etc/timezone ADD target/*.jar /opt/app.jar CMD [&amp;quot;sh&amp;quot;,&amp;quot;-c&amp;quot;,&amp;quot;exec java $JAVA_OPT -jar /opt/app.jar $JAVA_ARG&amp;quot;] deployment.yaml apiVersion: apps/v1 kind: Deployment metadata: name: megaordermiddleware-basic-gateway spec: selector: matchLabels: app: megaordermiddleware-basic-gateway replicas: 2 template: metadata: labels: app: megaordermiddleware-basic-gateway spec: containers:</description></item><item><title>jenkins自动发布之go/golang项目</title><link>https://yanyong.cc/post/jenkins02/</link><pubDate>Fri, 22 Apr 2022 15:49:05 +0800</pubDate><guid>https://yanyong.cc/post/jenkins02/</guid><description>go语言项目 后端API接口 beego框架 Dockerfile FROM golang:1.16-alpine as builder WORKDIR /work ENV GO111MODULE=on \ GOPROXY=https://goproxy.cn,direct COPY . . RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o app . \ &amp;amp;&amp;amp; mkdir run &amp;amp;&amp;amp; cp -r conf app run &amp;amp;&amp;amp; cp conf/app-test.conf run/conf/app.conf #FROM scratch FROM alpine RUN apk add --no-cache ca-certificates tzdata \ &amp;amp;&amp;amp; ln</description></item><item><title>Docker安装jenkins</title><link>https://yanyong.cc/post/jenkins/</link><pubDate>Fri, 22 Apr 2022 11:14:25 +0800</pubDate><guid>https://yanyong.cc/post/jenkins/</guid><description>运行jenkins 1 2 3 4 5 6 7 8 9 10 11 12 13 sudo docker run \ --name jenkins-blueocean \ --env TZ=&amp;#39;Asia/Shanghai&amp;#39; \ -u root \ -d \ -p 8080:8080 \ -p 50000:50000 \ --restart always \ -v /data/jenkins_home:/var/jenkins_home \ -v /var/run/docker.sock:/var/run/docker.sock \ jenkinsci/blueocean sudo docker exec jenkins-blueocean cat /var/jenkins_home/secrets/initialAdminPassword 安装插件 Publish Over SSH https://plugins.jenkins.io/publish-over-ssh/</description></item><item><title>k8s部署elasticsearch</title><link>https://yanyong.cc/post/elastic/</link><pubDate>Tue, 12 Apr 2022 16:32:20 +0800</pubDate><guid>https://yanyong.cc/post/elastic/</guid><description>安装ECK 1 2 kubectl create -f https://download.elastic.co/downloads/eck/2.1.0/crds.yaml kubectl apply -f https://download.elastic.co/downloads/eck/2.1.0/operator.yaml 安装Elasticsearch 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 tee elasticsearch-7.16.3.yaml &amp;lt;&amp;lt; EOF</description></item><item><title>Debian 11初始化脚本</title><link>https://yanyong.cc/post/debian11-init/</link><pubDate>Mon, 15 Nov 2021 15:37:30 +0800</pubDate><guid>https://yanyong.cc/post/debian11-init/</guid><description>不推荐使用 不推荐使用！ 仅供参考！ 2025.3.29 参考 debian 10初始化脚本 此脚本比debian10初始化脚本略有变化，引用了一个环境变量$VERSION_COD</description></item><item><title>go/golang学习之路(1)go指南练习题解答</title><link>https://yanyong.cc/post/golang/</link><pubDate>Wed, 08 Sep 2021 14:50:23 +0800</pubDate><guid>https://yanyong.cc/post/golang/</guid><description>go指南练习题 练习：切片 https://tour.go-zh.org/moretypes/18 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 package main import ( &amp;#34;math&amp;#34; &amp;#34;golang.org/x/tour/pic&amp;#34; ) func Pic(dx, dy int) [][]uint8 { pic := make([][]uint8, dy) for y := 0; y &amp;lt; dy; y++ { pic[y] = make([]uint8, dx) for x := 0; x</description></item><item><title>macOS常用工具推荐</title><link>https://yanyong.cc/post/macos-tools/</link><pubDate>Mon, 02 Aug 2021 16:26:19 +0800</pubDate><guid>https://yanyong.cc/post/macos-tools/</guid><description>macOS工具： 包管理器(必备神器)：Homebrew 浏览器：Chrome, Safari 编辑器：Visual Studio Code, MacDown, ProperTree 压缩：The Unarchiver API工具：Post</description></item><item><title>Docker安装各种软件参考示例</title><link>https://yanyong.cc/post/docker-example-list/</link><pubDate>Sun, 25 Jul 2021 16:26:19 +0800</pubDate><guid>https://yanyong.cc/post/docker-example-list/</guid><description>MariaDB 创建数据目录和配置文件 1 sudo mkdir -p /data/mariadb/{data,conf.d} 1 2 3 4 5 6 7 8 9 10 11 cat &amp;lt;&amp;lt; EOF | sudo tee /data/mariadb/conf.d/my.cnf [mariadb] server_id=1 character-set-server=utf8mb4 # default collation-server=utf8mb4_general_ci # default lower_case_table_names=1 max_connections=10000 max_connect_errors=100000 innodb_buffer_pool_size=4294967296 # 4G. default 128M max_allowed_packet=1073741824 # 1G. default 16M EOF 如果镜像有安装tzdata</description></item><item><title>记录一次gitlab迁移，gitlab跨版本升级</title><link>https://yanyong.cc/post/gitlab02/</link><pubDate>Thu, 01 Jul 2021 16:15:20 +0800</pubDate><guid>https://yanyong.cc/post/gitlab02/</guid><description>官方迁移文档 确认gitlab版本 gitlab网页上help里查看，或命令查看，我这里版本是13.3.5 1 sudo docker exec gitlab cat /opt/gitlab/embedded/service/gitlab-rails/VERSION 备份 1 2 3 4 5 6 7 sudo docker exec</description></item><item><title>Certbot自动续签Let's Encrypt免费泛域名SSL证书</title><link>https://yanyong.cc/post/certbot/</link><pubDate>Tue, 22 Jun 2021 16:26:19 +0800</pubDate><guid>https://yanyong.cc/post/certbot/</guid><description>最新内容 https://yanyong.cc/post/certbot-cloudflare-letsencrypt/ 2025.4.2 安装Certbot 参考链接： https://certbot.eff.org/docs/using.html?highlight=renew#automated-renewals https://askubuntu.com/questions/553937/what-is-the-difference-between-the-core-full-extras-and-light-packages-for-ngi https://salsa.debian.org/nginx-team/nginx/-/blob/master/debian/control debian操作系统： 1 2 sudo apt-get -y install certbot sudo apt-get -y install nginx libnginx-mod-stream centos操作系统： 1 2 3 4 5 6 sudo yum -y install epel-release sudo</description></item><item><title>CentOS 8初始化脚本</title><link>https://yanyong.cc/post/centos8-init/</link><pubDate>Tue, 15 Jun 2021 13:50:30 +0800</pubDate><guid>https://yanyong.cc/post/centos8-init/</guid><description>不推荐使用 不推荐使用！ 仅供参考！ 2025.3.29 脚本使用方法 参考Debian 10初始化脚本。 示例 创建用户yanyong，设置FQDN为blog.yanyo</description></item><item><title>Docker轻量级UI工具portainer安装</title><link>https://yanyong.cc/post/portainer/</link><pubDate>Fri, 11 Jun 2021 18:24:38 +0800</pubDate><guid>https://yanyong.cc/post/portainer/</guid><description>安装portainer portainer官网 1 2 3 4 5 sudo docker pull portainer/portainer-ce:alpine sudo docker volume create myportainer_data sudo docker run -d -p 9000:9000 -p 8000:8000 --name=myportainer --restart=always \ -v /var/run/docker.sock:/var/run/docker.sock \ -v myportainer_data:/data portainer/portainer-ce:alpine 忘记密码重置方法 1 2 3 sudo docker stop myportainer sudo docker</description></item><item><title>Zabbix监控配置之自带模板监控mysql</title><link>https://yanyong.cc/post/zabbix06/</link><pubDate>Fri, 21 May 2021 12:20:40 +0800</pubDate><guid>https://yanyong.cc/post/zabbix06/</guid><description>官方文档入口 自带模板官方文档 官方git地址1 官方git地址2 被监控mysql上创建用户 1 2 CREATE USER &amp;#39;zbx_monitor&amp;#39;@&amp;#39;%&amp;#39; IDENTIFIED BY &amp;#39;12345&amp;#39;; GRANT REPLICATION CLIENT,PROCESS,SHOW DATABASES,SHOW VIEW ON *.* TO &amp;#39;zbx_monitor&amp;#39;@&amp;#39;%&amp;#39;; zabbix agent配置 参考</description></item><item><title>Zabbix监控配置之web监测</title><link>https://yanyong.cc/post/zabbix05/</link><pubDate>Thu, 20 May 2021 15:06:21 +0800</pubDate><guid>https://yanyong.cc/post/zabbix05/</guid><description>创建web场景 web场景官方文档入口 客户端是可选项，这里选择的chrome 数据体和头部信息可以浏览器F12查找，或找接口开发人员确认 创建触发</description></item><item><title>Zabbix监控配置之邮件报警和钉钉报警</title><link>https://yanyong.cc/post/zabbix04/</link><pubDate>Thu, 20 May 2021 10:19:33 +0800</pubDate><guid>https://yanyong.cc/post/zabbix04/</guid><description>邮件报警 报警媒介，发送报警信息的 用户报警媒介，接收报警信息的 动作，触发发送报警信息 钉钉报警 创建群聊并添加钉钉机器人 选人建群或内部群都可以 安全</description></item><item><title>一行代码解决Zabbix中文乱码</title><link>https://yanyong.cc/post/zabbix03/</link><pubDate>Wed, 19 May 2021 18:05:21 +0800</pubDate><guid>https://yanyong.cc/post/zabbix03/</guid><description>乱码现象 一行代码解决 备份原有字体 1 sudo docker exec -u root zabbix-web-nginx-mysql bash -c &amp;#39;mv /usr/share/zabbix/assets/fonts/DejaVuSans.ttf{,.BAK}&amp;#39; 一行代码解决，下载字体并替换 1 sudo docker exec -u root zabbix-web-nginx-mysql bash -c &amp;#39;cd /usr/share/zabbix/assets/fonts/;wget https://raw.yanyong.cc/download/fonts/SIMKAI.TTF;ln -s SIMKAI.TTF DejaVuSans.ttf&amp;#39; 已正常显示中文，无需重启</description></item><item><title>Zabbix监控配置之自动发现和自动注册</title><link>https://yanyong.cc/post/zabbix02/</link><pubDate>Wed, 19 May 2021 16:10:30 +0800</pubDate><guid>https://yanyong.cc/post/zabbix02/</guid><description>手动添加主机 agent被动模式 agent主动模式 主动模式时Hostname必须与server端创建主机时的名字一致，模板选择带active的</description></item><item><title>Docker容器三分钟安装Zabbix</title><link>https://yanyong.cc/post/zabbix/</link><pubDate>Wed, 19 May 2021 14:11:39 +0800</pubDate><guid>https://yanyong.cc/post/zabbix/</guid><description>安装数据库 安装mariadb，略。参考https://yanyong.cc/post/docker-example-list/#mariad</description></item><item><title>K8s数据持久化存储之NFS</title><link>https://yanyong.cc/post/k8s03/</link><pubDate>Wed, 10 Mar 2021 20:00:52 +0800</pubDate><guid>https://yanyong.cc/post/k8s03/</guid><description>安装NFS Server NFS服务端IP为: 10.20.70.113 1 sudo apt-get -y install nfs-kernel-server # 包含nfs-common 1 2 3 sudo mkdir -p /data/k8s-nfs echo &amp;#39;/data/k8s-nfs *(rw,sync,no_root_squash)&amp;#39; | sudo tee /etc/exports sudo exportfs -a 检查状态 1 2 3 systemctl status nfs-server sudo rpcinfo -p |grep nfs cat /var/lib/nfs/etab</description></item><item><title>Kubernetes Dashboard安装</title><link>https://yanyong.cc/post/k8s02/</link><pubDate>Mon, 08 Mar 2021 19:04:02 +0800</pubDate><guid>https://yanyong.cc/post/k8s02/</guid><description>安装Dashboard kubernetes.io地址 github地址 下载文件后稍作修改，方便集群外访问 1 2 #有可能要梯子下载，请到官方确认最</description></item><item><title>K8s(Kubernetes)集群安装</title><link>https://yanyong.cc/post/k8s/</link><pubDate>Mon, 08 Mar 2021 10:04:35 +0800</pubDate><guid>https://yanyong.cc/post/k8s/</guid><description>官方文档入口 注：master和node的操作系统都是debian 10 Master和Node都需要 安装docker 安装docker参考这里 doc</description></item><item><title>Debian Docker安装教程</title><link>https://yanyong.cc/post/install-docker/</link><pubDate>Wed, 02 Dec 2020 18:24:38 +0800</pubDate><guid>https://yanyong.cc/post/install-docker/</guid><description>安装docker-ce 升级过testing的话，$(lsb_release -cs)可能会返回结果是sid，换成代号比如debian 10的bu</description></item><item><title>Debian 10初始化脚本</title><link>https://yanyong.cc/post/debian10-init/</link><pubDate>Wed, 02 Dec 2020 11:52:30 +0800</pubDate><guid>https://yanyong.cc/post/debian10-init/</guid><description>不推荐使用 不推荐使用！ 仅供参考！ 2025.3.29 使用方法 安装curl 如果已有curl，可忽略此步骤。 1 apt-get -y install curl 示例1 创建用户yanyong，设置FQDN为</description></item><item><title>使用openssl自签名ssl证书</title><link>https://yanyong.cc/post/openssl/</link><pubDate>Fri, 09 Oct 2020 10:49:57 +0800</pubDate><guid>https://yanyong.cc/post/openssl/</guid><description>无CA签名 生成证书 1 2 3 openssl req -x509 -nodes -days 3650 -newkey rsa:2048 -keyout domain.key -out domain.crt \ -addext &amp;#34;subjectAltName=DNS:www.example.com,DNS:*.example.com&amp;#34; \ -subj &amp;#39;/C=CN/ST=Guangdong/L=Shenzhen/O=example/OU=IT/CN=example.com&amp;#39; 查看证书 1 openssl x509 -in domain.crt -noout -text nginx配置参考 1 2 ssl_certificate /path/domain.crt; ssl_certificate_key /path/domain.key; CA签名 生成签发机构证书 生成</description></item><item><title>Docker(docker-compose)安装harbor</title><link>https://yanyong.cc/post/harbor/</link><pubDate>Mon, 21 Sep 2020 15:49:05 +0800</pubDate><guid>https://yanyong.cc/post/harbor/</guid><description>官方文档入口 配置harbor.yml 1 2 3 4 5 wget https://github.com/goharbor/harbor/releases/download/v2.5.0/harbor-offline-installer-v2.5.0.tgz tar zxf harbor-offline-installer-v2.5.0.tgz &amp;amp;&amp;amp; cd harbor cp harbor.yml.tmpl harbor.yml harbor.yml参考 1 2 3 4 5 6 7 8 9 10 hostname: harbor.example.com http: port: 8080 external_url: https://harbor.example.com harbor_admin_password: Harbor12345 database: password: root123 max_idle_conns: 100</description></item><item><title>Docker安装gitlab</title><link>https://yanyong.cc/post/gitlab/</link><pubDate>Mon, 21 Sep 2020 15:49:05 +0800</pubDate><guid>https://yanyong.cc/post/gitlab/</guid><description>官方文档入口 运行gitlab 1 2 3 4 5 6 7 8 9 10 11 sudo docker run --detach \ --hostname gitlab.example.com \ --publish 880:80 --publish 22:22 \ --name gitlab \ --restart always \ --env TZ=&amp;#39;Asia/Shanghai&amp;#39; \ --volume /srv/gitlab/config:/etc/gitlab \ --volume /srv/gitlab/logs:/var/log/gitlab \ --volume /srv/gitlab/data:/var/opt/gitlab \ --shm-size 256m \ gitlab/gitlab-ce gitlab14版本</description></item><item><title>使用SFTP用户管理网站文件和资源</title><link>https://yanyong.cc/post/sftp/</link><pubDate>Tue, 01 Sep 2020 14:46:24 +0800</pubDate><guid>https://yanyong.cc/post/sftp/</guid><description>创建用户和组 1 2 3 sudo groupadd sftp sudo useradd -s /bin/false -M -g sftp -G www-data sftpuser01 sudo chpasswd &amp;lt;&amp;lt;&amp;lt; &amp;#39;sftpuser01:123456&amp;#39; 配置ssh 修改/etc/ssh/sshd_config文件添加以下内容 1 2 3 4 5 6 Match Group sftp</description></item><item><title>Linux系统多人维护网站，目录或文件属主和权限继承</title><link>https://yanyong.cc/post/acl/</link><pubDate>Tue, 01 Sep 2020 14:27:32 +0800</pubDate><guid>https://yanyong.cc/post/acl/</guid><description>安装acl 1 sudo apt-get -y install acl 把维护者用户user01加入到www-data组，www-data组为nginx运行身份www-data用户所属的组 1</description></item><item><title>Fail2ban</title><link>https://yanyong.cc/post/fail2ban/</link><pubDate>Thu, 20 Aug 2020 16:26:19 +0800</pubDate><guid>https://yanyong.cc/post/fail2ban/</guid><description> 1 2 3 4 5 6 7 8 9 sudo apt-get install -y fail2ban cat &amp;lt;&amp;lt; EOF | sudo tee /etc/fail2ban/jail.d/sshd.local [sshd] enabled = true port = 23422 EOF sudo systemctl reload fail2ban</description></item><item><title>Debian升级Testing</title><link>https://yanyong.cc/post/upgrade-to-testing/</link><pubDate>Sun, 12 Jul 2020 13:25:47 +0800</pubDate><guid>https://yanyong.cc/post/upgrade-to-testing/</guid><description>不建议升级testing 1 2 echo &amp;#39;deb http://ftp.us.debian.org/debian/ testing main&amp;#39; | sudo tee /etc/apt/sources.list.d/testing.list sudo apt-get update &amp;amp;&amp;amp; apt-get -y upgrade 参考链接 https://wiki.debian.org/DebianTesting</description></item></channel></rss>